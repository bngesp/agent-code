#!/usr/bin/env python3

from src.agents.smart_manager import SmartManager

def main():
    print("ü§ñ Agent Code - Syst√®me Multi-Agents Intelligent")
    print("=" * 50)
    
    # Cr√©er le SmartManager
    smart_manager = SmartManager()
    
    # Exemple de projets
    exemple_projets = [
        "Je veux une application de prise de notes avec authentification et sauvegarde cloud",
        "Cr√©er une API REST pour un e-commerce avec gestion des produits et commandes",
        "D√©velopper un dashboard analytics avec graphiques temps r√©el",
        "Application mobile de chat en temps r√©el avec React Native"
    ]
    
    print("\nüìã Exemples de projets disponibles :")
    for i, projet in enumerate(exemple_projets, 1):
        print(f"{i}. {projet}")
    
    print("\n0. Saisir un projet personnalis√©")
    
    try:
        choix = input("\nChoisissez un projet (0-4) : ").strip()
        
        if choix == "0":
            user_prompt = input("D√©crivez votre projet : ").strip()
        elif choix.isdigit() and 1 <= int(choix) <= len(exemple_projets):
            user_prompt = exemple_projets[int(choix) - 1]
        else:
            print("Choix invalide, utilisation du projet par d√©faut")
            user_prompt = exemple_projets[0]
        
        if not user_prompt:
            print("Aucune description fournie, utilisation du projet par d√©faut")
            user_prompt = exemple_projets[0]
        
        print(f"\nüéØ Projet s√©lectionn√© : {user_prompt}")
        print("\n" + "="*70)
        
        # Ex√©cuter le projet avec le SmartManager
        result = smart_manager.execute_dynamic_project(user_prompt)
        
        print("\n" + "="*70)
        print("üéâ R√âSULTAT FINAL")
        print("="*70)
        print(result)
        
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è Interruption utilisateur")
    except Exception as e:
        print(f"\n‚ùå Erreur : {e}")

if __name__ == "__main__":
    main()